# 1 Задание

'''Задание предполагает создание списка, в котором каждое слово из
предоставленной строки сопровождается числом, представляющим длину
этого слова.
"apple ban" --> ["apple 5", "ban 3"]
"you will win" --> ["you 3", "will 4", "win 3"]'''

# def words_lengths(input_string):
#     '''Длина слов'''
#     words = input_string.split()
#     # Список, где слово дополнено числом, его длины
#     result = [f"{word} {len(word)}" for word in words]
#     return result
# user_input = input("Введите строку: ")
# # Выводим результат
# result = words_lengths(user_input)
# print(result)


# 2 Напишите функцию, которая:
'''а) получает на вход число, возвращает его максимальную цифру.
Пример: 51 → 5,
 4316 → 6'''
# def func_a(number):
#     '''Максимальная цифра'''
#     number_str = str(number)
#     max_digit = max(number_str)
#     return int(max_digit)
# user_input = input("Введите без пробелов число: ")
# user_number = int(user_input)
# #Выводим результат
# result = func_a(user_number)
# print(f"Максимальная цифра в числе: {result}")


'''b) получает на вход строку из символов без пробелов, возвращает символ,
который встречается в этой строке чаще всех. Если таких символов
несколько, функция должна вернуть кортеж из них.
Пример: elephant → e,
 hahaha → (h,a)'''

# def func_b(string):
#     '''Символ, который встречается чаще всех'''
#     string_list = list(string)
#     # Считаем количество вхождений каждого символа в строку
#     string_dict = {symbol: string_list.count(symbol) for symbol in string_list}
#     max_count = max(string_dict.values())
#     result = [symbol for symbol, count in string_dict.items() if count == max_count]
#     return result
# user_string = input("Введите строку: ")
# # Выводим результат
# result = func_b(user_string)
# print(f"Символы, которые встречаются чаще всех в строке '{user_string}': {result}")


'''c) получает на вход строку из слов и чисел, возвращает количество чисел,
входящих в строку
Пример: один 2 три четыре 5 шесть 3 → 3'''

# def func_c(string):
#     '''Количество чисел в строке'''
#     words = string.split()
#     # Считаем количество чисел в строке
#     count = sum(1 for word in words if word.isdigit())
#     return count
# user_string = input("Введите строку: ")
# #Выводим результат
# result = func_c(user_string)
# print(f"Количество чисел в строке '{user_string}': {result}")






# 3

'''Задача: Калькулятор транспортных расходов
Напишите программу на Python, которая поможет пользователям
рассчитывать общие расходы на топливо для своего автомобиля.
Программа должна запрашивать следующую информацию:
 Пройденное расстояние в километрах.
 Расход топлива в литрах на 100 километров.
 Стоимость литра топлива.
На основе введенных данных программа должна рассчитать и вывести
общий расход на топливо для пройденного расстояния.
Пример ввода:
Введите пройденное расстояние в километрах: 250
Введите расход топлива в литрах на 100 км: 8.5
Введите стоимость литра топлива: 45.0
Пример вывода:
Общий расход на топливо: 956.25 сом'''


# def main():
#     distance = float(input("Введите пройденное расстояние в км: "))
#     consumption = float(input("Введите расход топлива в литрах на 100 км: "))
#     price = float(input("Введите стоимость литра топлива: "))
#
#     calculate_fuel_cost = lambda d, c, p: (d / 100) * c * p
#     total_cost = calculate_fuel_cost(distance, consumption, price)
#
#     print("Общий расход на топливо: {:.2f} сом".format(total_cost))
#
# if __name__ == "__main__":
#     main()

# 4

'''БишкекТроллейбус .
Файл routes.txt содержит текстовое описание троллейбусных маршрутов
Бишкека
Оформите файл так, чтобы конечные остановки выводились на отдельной
строке, а промежуточные точки были все в одной строке. если точка
содержит слово «рынок» или «автовокзал», то она должна быть выведена
БОЛЬШИМИ буквами. перед номером маршрута должно появиться слово
«Маршрут №»
Пример: Маршрут № 2 Микрорайон "Аламедин-1« ВОСТОЧНЫЙ
АВТОВОКЗАЛ - Цирк - Bishkek Park - Филармония - ОШСКИЙ РЫНОК Завод
имени Фрунзе'''

# 5

'''Евровидение
Телезрители с помощью смс голосуют за исполнителя. Они могут прислать
на определённый номер имя исполнителя, название песни или название
страны, которую представляет исполнитель. Необходимо учесть голоса
всех зрителей. Для вашего удобства полный список исполнителей лежит в
файле participants.txt. Сообщения телезрителей лежат в файле votes.txt.
Выведите в файл results.txt сведения о тройке призёров конкурса в
следующем формате:
1. Страна Исполнитель Песня Количество_голосов
2. Страна Исполнитель Песня Количество_голосов
3. Страна Исполнитель Песня Количество_голосов'''

# 6

'''В одном шаге от счастья
Вова купил билет в трамвае 13-го маршрута и сразу посчитал суммы
первых трёх цифр и последних трёх цифр номера билета (номер у билета
шестизначный). Оказалось, что суммы отличаются ровно на единицу. «Я в
одном шаге от счастья», — подумал Вова, — «или предыдущий или
следующий билет точно счастливый». Прав ли он?
Пример
№              INPUT              OUTPUT
1                3                
               715068               Yes
               445219               No
               012200               Yes'''

# 7

'''Создание одностраничного сайта на свободную тему
Ваша задача - разработать одностраничный сайт на свободную тему. Это
может быть связано с вашими интересами, хобби, или любой другой
темой, которая вам близка. Ваш сайт должен содержать следующие
основные элементы:

1)Шапка (Header):
 Добавьте заголовок, который отражает основную идею вашего
сайта.
 Вставьте изображение, которое соответствует выбранной вами
теме.

2)Основной Контент (Main Content):
 Расскажите о выбранной вами теме, предоставив краткую
информацию и интересные факты.
 Включите несколько блоков контента, чтобы обогатить
информацию.

3)Изображения или Галерея (Images or Gallery):
 Добавьте несколько изображений или создайте галерею, связанную
с вашей темой.
 Обеспечьте адекватные описания к каждому изображению.

4)Футер (Footer):
Добавьте дополнительные ссылки, информацию о вас, вашем проекте или
любые другие дополнительные элементы, которые считаете уместными'''

# 8

'''Задача: Онлайн книжный магазин
Напишите программу на Python для онлайн книжного магазина, которая
предоставляет информацию о книгах и их наличии в магазине.
 Создайте класс Book с атрибутами:
 Название книги
 Автор
 Жанр
 Цена
 Количество книг в наличии
 Создайте несколько экземпляров класса Book, представляющих различные
книги.
 Реализуйте методы:
 display_info(), который выводит информацию о книге (название,
автор, жанр, цена, количество в наличии).
 sell_book(quantity), который уменьшает количество книг в наличии
на указанное количество после продажи. Если количество книг для
продажи больше, чем количество в наличии, выведите сообщение
об ошибке.'''


# class Book:
#     def __init__(self, title, author, genre, price, quantity):
#         self.title = title
#         self.author = author
#         self.genre = genre
#         self.price = price
#         self.quantity = quantity
#
#     def display_info(self):
#         print("Название:", self.title)
#         print("Автор:", self.author)
#         print("Жанр:", self.genre)
#         print("Цена:", self.price)
#         print("Количество в наличии:", self.quantity)
#
#     def sell_book(self, quantity):
#         if quantity <= self.quantity:
#             self.quantity -= quantity
#             print(f"Продано {quantity} экземпляров книги '{self.title}'.")
#         else:
#             print("Ошибка: Недостаточно книг в наличии.")
#
# # Создание экземпляров класса Book
# book1 = Book("Гарри Поттер и философский камень", "Дж. К. Роулинг", "фэнтези", 500, 10)
# book2 = Book("1984", "Джордж Оруэлл", "драма", 400, 5)
# book3 = Book("Война и мир", "Лев Толстой", "роман", 600, 8)
#
# # Пример использования методов
# print("Информация о книге 1:")
# book1.display_info()
# print()
#
# book1.sell_book(3)
# print("После продажи:")
# book1.display_info()
# print()
#
# book1.sell_book(10)



# 9

'''Задача: Учет сотрудников в компании
 Создайте класс Employee с атрибутами:
 Имя
 Должность
 Зарплата
 Реализуйте метод display_info(), который выводит информацию о
сотруднике.
 Создайте несколько экземпляров класса Employee, представляющих
различных сотрудников.
 Выведите информацию о каждом сотруднике.

Вторая часть задания :
 Добавьте к классу Employee возможность учитывать бонусы.
 Создайте новый класс Manager, который наследуется от класса
Employee. Класс Manager должен иметь дополнительный атрибут -
список подчиненных сотрудников.
 Реализуйте метод calculate_bonus(), который будет рассчитывать
бонус менеджера в зависимости от зарплат его подчиненных.
 Создайте несколько экземпляров классов Employee и Manager,
добавьте подчиненных для менеджеров, и выведите информацию о
каждом сотруднике с учетом бонусов.'''


class Employee:
    def __init__(self, name, position, salary, bonus=0):
        self.name = name
        self.position = position
        self.salary = salary
        self.bonus = bonus

    def display_info(self):
        print("Имя:", self.name)
        print("Должность:", self.position)
        print("Зарплата:", self.salary)
        print("Бонус:", self.bonus)

class Manager(Employee):
    def __init__(self, name, position, salary, subordinates=None, bonus=0):
        super().__init__(name, position, salary, bonus)
        if subordinates is None:
            self.subordinates = []
        else:
            self.subordinates = subordinates

    def calculate_bonus(self):
        total_salary_subordinates = sum(emp.salary for emp in self.subordinates)
        self.bonus = total_salary_subordinates * 0.1  # Пример расчета бонуса, 10% от общей зарплаты подчиненных

# Создание экземпляров класса Employee
employee1 = Employee("Иван Иванович", "Менеджер", 50000)
employee2 = Employee("Петр Петров", "Разработчик", 60000)
employee3 = Employee("Андрей Андпеев", "Дизайнер", 45000)

# Создание экземпляров класса Manager
manager1 = Manager("Михаил Михайлович", "Главный менеджер", 80000, [employee1, employee2, employee3])
manager2 = Manager("Ольга Олеговна", "Менеджер по продажам", 70000, [employee3])

# Расчет бонуса для менеджеров
manager1.calculate_bonus()
manager2.calculate_bonus()

# Вывод информации о каждом сотруднике с учетом бонусов
print("Информация о сотруднике 1:")
employee1.display_info()
print()

print("Информация о сотруднике 2:")
employee2.display_info()
print()

print("Информация о сотруднике 3:")
employee3.display_info()
print()

print("Информация о менеджере 1:")
manager1.display_info()
print()

print("Информация о менеджере 2:")
manager2.display_info()
